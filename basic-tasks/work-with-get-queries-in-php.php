<!--Работа с GET запросами в PHP-->

<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>
<body>
<!--GET-запросы-->
<?php
//1. Отправьте с помощью GET-запроса число. Выведите его на экран.
//echo $_GET['get'];
//http://forphpstuff.loc/work-with-get-queries-in-php.php?get=1

//2.  Отправьте с помощью GET-запроса число. Выведите его на экран квадрат этого числа.
//echo $_GET['get'] * $_GET['get'];

//3. Отправьте с помощью GET-запроса два числа. Выведите его на экран сумму этих чисел.
/*echo $_GET['get'] + $_GET['get'];*/

//4. Пусть с помощью GET-запроса отправляется число. Оно может быть или 1, или 2. Сделайте так, чтобы если передано 1 - на экран вывелось слово 'привет', а если 2 - то слово 'пока'.
/*if($_GET['get'] == 1){
    echo 'привет';
}else if($_GET['get'] == 2){
    echo 'пока';
}*/

//GET-запросы и массивы
//5. Дан массив. Сделайте так, чтобы с помощью GET-запроса можно было вывести любой элемент этого массива.

/*$arr = ['a','b','c','d','e'];
if(!empty($_GET['get'])){
    echo $arr[$_GET['get']];
}*/

//GET-запросы и ссылки
/*6. Сделайте 3 ссылки. Пусть первая передает число 1, вторая - число 2, третья - число 3. Сделайте так, чтобы по нажатию на ссылку на экран выводилось ее число.*/

?>
<!--<a href="?get=1">1</a><br>
<a href="?get=2">2</a><br>
<a href="?get=3">3</a>-->
<?
/*    echo "<br><br>".$_GET['get'];*/
?>

<?
//Ссылки и циклы
/*7. Сформируйте в цикле 10 ссылок. Пусть каждая ссылка передает свое число. Сделайте так, чтобы по нажатию на ссылку на экран выводилось ее число.*/

/*for($i = 0; $i < 10; $i++){
    echo '<a href=?get='.$i.'>'.$i.'</a>&nbsp;';
}

echo '<p>'.$_GET['get'].'</p>';*/

//8. Модифицируйте предыдущую задачу так, чтобы каждая ссылка стояла в своем абзаце.

/*for($i = 0; $i < 10; $i++){
    echo '<p><a href=?get='.$i.'>'.$i.'</a></p>';
}*/

//9. Модифицируйте предыдущую задачу так, чтобы каждая ссылка стояла в своем li в теге ul.

/*echo '<ul>';
for($i = 0; $i < 10; $i++){
    echo '<li><a href=?get='.$i.'>'.$i.'</a></li>';
}
echo '</ul>';*/

//Ссылки и массивы

/*10. Дан массив. Сделайте так, чтобы с помощью GET-запроса можно было вывести любой элемент этого массива. Для этого вручную сделайте ссылку для каждого элемента массива. Переходя любой ссылке мы должны увидеть на экране соответствующий элемент массива.*/

/*$arr = ['a','b','c','d','e'];

for($i = 0; $i < count($arr); $i++){
    echo '<a href=?get='.$arr[$i].'>'.$arr[$i].'</a>&nbsp;';
}

echo '<p>'.$_GET['get'].'</p>';*/

/*11. Модифицируйте предыдущую задачу так, чтобы ссылки выводились с помощью цикла foreach автоматически в соответствии с количеством элементов в массиве.*/

/*$arr = ['a','b','c','d','e'];

foreach($arr as $key => $value ){
    echo '<a href=?get='.$value.'>'.$value.'</a>&nbsp;';
}

echo '<p>'.$_GET['get'].'</p>';*/
?>

</body>
</html>