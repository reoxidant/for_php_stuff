<?php 
	// <---------------Примеры----------------->
	// Функция strtolower преобразовывает строку в нижний регистр.
	/*echo strtolower('ABC');*/

	// Функция strtoupper преобразовывает строку в верхний регистр.
	/*echo strtoupper('abc');*/

	// Функция ucfirst преобразует первый символ строки в верхний регистр. Не работает с кириллицей.
	/*echo ucfirst('hello');*/

	// Функция lcfirst преобразует первый символ строки в нижний регистр. Не работает с кириллицей.
	/*echo lcfirst('HELLO');*/

	// Функция ucwords преобразует первый символ каждого слова в строке в верхний регистр. Не работает с кириллицей.
	/*echo ucwords('hello world');*/

	// Функция strlen возвращает длину строки (количество символов в строке).
	/*	echo strlen("hello");*/

	// Функция substr вырезает и возвращает подстроку из строки.

	/*echo substr("abcdef", 1, 3)."<br>";
	echo substr("abcdef", 1)."<br>";
	echo substr("abcdef", -3, 2)."<br>";
	echo substr('abcdef', -1);*/

	// Функция str_replace ищет в строке заданный текст и меняет его на другой.
	/*echo str_replace('ab', "!", 'abcabc');
	echo str_replace(['a', 'b', 'c'], [1,2,3], 'abcabc');*/

	// Функция strtr осуществляет поиск и замену символов в строке.
	/*echo strtr('111222', ['1'=>'a', '2'=>"b"]);
	echo strtr('123123', '123', 'hao');*/

	// Функция substr_replace заменяет указанную часть строки на другую.
	/*echo substr_replace('abcabcabc', '2018', 2, 4 )."<br>";
	echo substr_replace('abcabc', '111', 1);*/

	/*Функция strpos возвращает позицию первого вхождения подстроки в другую строку. Первым параметром функция принимает строку, в которой осуществляется поиск, вторым параметром - подстроку, которую следует искать.*/
	/*echo strpos('toage', 'a')."<br>";
	echo strpos("my long leg", 'l', 5);
	if(strpos('http://site.ru', 'http://') === 0){
		echo 'да';
	} else {
		echo "нет";
	}*/

	// Функция strrpos возвращает позицию последнего вхождения подстроки.
	/*echo strrpos('abc abc', 'a');*/

	// Функция strstr находит первое вхождение подстроки в строку и возвращает часть строки начиная этого места до конца строки. В отличие от strchr ищет вхождение подстроки из нескольких символов, а не вхождение одного символа.
	/*echo strstr('site.ru/folder1/folder2/page.html', '/');*/

	// Функция explode разбивает строку в массив по определенному разделителю.
	/*$date = '2025-12-31';
	$arr = explode('-', $date);
	var_dump($arr);*/

	/*$date = '2025-12-31';
	$arr = explode('-', $date);
	echo $arr[2].'.'.$arr[1].".".$arr[0];*/

	// Функция implode сливает массив в строку с указанным разделителем.
	/*$arr = ['a', 'b', 'c'];
	$str = implode('-', $arr);
	echo $str;*/

	// Функция str_split разбивает строку в массив.
	/*$str = 'abcde';
	$arr = str_split($str, 2);
	var_dump($arr);*/

	/*$str = 'abcdefg';
	$arr = str_split($str, 3);
	var_dump($arr);*/

	/*$num = 12345;
	echo array_sum(str_split($num, 1));*/

	// Функция trim удаляет пробелы с начала и конца строки. Может также удалять другие символы, если их указать вторым параметром.
	/*	var_dump(trim(' hello '))."<br>";
	echo trim('/hello/', '/')."<br>";
	echo trim('/hello.', '/.');*/

	// Функция ltrim удаляет пробелы с начала строки.
	/*echo ltrim('  abcabc');*/

	// Функция rtrim удаляет пробелы с конца строки.
	/*echo rtrim("abcabc  ");*/

	// Функция strrev переворачивает строку так, чтобы символы шли в обратном порядке.
	/*echo strrev("carefeho");*/

	// Функция str_shuffle переставляет символы в строке в случайном порядке.
	/*echo str_shuffle('hello world');*/

	// Функция number_format позволяет форматировать число.
	/*echo number_format(123456)."<br>";
	echo number_format(1234.567, 2)."<br>";
	echo number_format(1234.567, 2, '/', ' ')."<br>";
	echo number_format(1234.567, 2, '.', ' ');*/

	// Функция str_repeat повторяет строку заданное количество раз.
	// echo str_repeat('x', 5);

	// Функция htmlspecialchars позволяет вывести теги в браузер так, чтобы он не считал их командами, а выводил как строки.
	/*echo htmlspecialchars("<b>Жирный текст<b>");*/

	// Функция strip_tags удаляет HTML теги из строки (не трогая их содержимого). 
	/*echo strip_tags("hello <b>world</b");*/

	// Функция chr находит символ по его ASCII коду.
	/*echo chr(97);
	echo chr(mt_rand(97,122));*/
	/*$str = '';
	for($i = 1; $i <= 6; $i++){
		$str .= chr(mt_rand(97,122));
	}
	echo $str;*/

	// Функция ord возвращает ASCII код символа. Параметром принимает один символ или целую строку (в этом случае возвращает код ее первого символа).
	/*echo ord("I")."<br>";
	echo ord("World");*/

	// Функция str_word_count подсчитывает количество слов в строке.
	/*echo str_word_count("Hello my world");*/

	// Функция substr_count подсчитывает сколько раз встречается подстрока в строке.
	/*echo substr_count("test www test", "test");*/

	// Функция count_chars подсчитывает сколько раз встречаются различные символы в строке.
	/*echo count_chars("oooppp", 2);*/

	// Функция strchr находит первое вхождение подстроки в строку и возвращает часть строки начиная этого места до конца строки.
	/*echo strchr("site.ru/folder1/folder2/page.html", '/');*/

	// Функция strrchr находит последнее вхождение символа в строку и возвращает часть строки начиная этого места до конца строки.
	/*echo strrchr("site.ru/folder1/folder2/page.html", '/');*/
	// <---------------Примеры----------------->

	/*Тема: Работа с регистром символов

	1. Дана строка 'php'. Сделайте из нее строку 'PHP'
	echo strtoupper("php");

	2. Дана строка 'PHP'. Сделайте из нее строку 'php'
	echo strtolower('PHP');

	3. Дана строка 'london'. Сделайте из нее строку 'London'.
	echo ucfirst("london");

	4. Дана строка 'London'. Сделайте из нее строку 'london'
	echo lcfirst("London");

	5. Дана строка 'london is the capital of great britain'. Сделайте из нее строку 'London Is The Capital Of Great Britain'
	echo ucwords("london is the capital of great britain");

	6. Дана строка 'LONDON'. Сделайте из нее строку 'London'
	echo ucfirst(strtolower("LONDON"));*/

/*	Тема: Работа с strlen

	7. Дана строка 'html css php'. Найдите количество символов в этой строке. 
	$str = 'html css php';
	echo strlen($str);

	8. Дана переменная $password, в которой хранится пароль пользователя. Если количество символов пароля больше 5-ти и меньше 10-ти, то выведите пользователю сообщение о том, что пароль подходит, иначе сообщение о том, что нужно придумать другой пароль.
	$password = "qwerty123";
	if(strlen($password) > 5 and strlen($password) < 10){
		echo "Пароль подходит.";
	} else {
		echo "Придумайте другой пароль.";
	}*/

	/*Тема: Работа с substr

	9.Дана строка 'html css php'. Вырежьте из нее и выведите на экран слово 'html', слово 'css' и слово 'php'. 
	$str = 'html css php';
	echo substr($str, 0, 4)."<br>";
	echo substr($str, 5, 3)."<br>";
	echo substr($str, 9, 3);

	10. Дана строка. Вырежите и выведите на экран последние 3 символа этой строки.
	$str = 'abcdef';
	echo substr($str, -3);

	11. Дана строка. Проверьте, что она начинается на 'http://'. Если это так, выведите 'да', если не так - 'нет'.
	$str = "http://ya.ru/folder1";
	if(substr($str, 0, 7) == 'http://'){
		echo "Да";
	} else {
		echo "Нет";
	}

	12. Дана строка. Проверьте, что она начинается на 'http://' или на 'https://'. Если это так, выведите 'да', если не так - 'нет'.
	$str = 'http://google.com';
	$value1 = substr($str, 0, 7);
	$value2 = substr($str, 0, 8);
	if($value1 == 'http://' or $value2 == 'https://'){
		echo "Да";
	} else {
		echo "Нет";
	}

	13. Дана строка. Проверьте, что она заканчивается на '.png'. Если это так, выведите 'да', если не так - 'нет'.
	$str = 'photo.png';
	if(substr($str, -4) == '.png'){
		echo "Да";
	} else {
		echo "Нет";
	}

	14. Дана строка. Проверьте, что она заканчивается на '.png' или на '.jpg'. Если это так, выведите 'да', если не так - 'нет'.
	$str = 'img.jpg';
	if(substr($str, -4) == '.jpg' or substr($str, -4) == ".png"){
		echo "Да";
	} else {
		echo "Нет";
	}

	15.Дана строка. Если в этой строке более 5-ти символов - вырежите из нее первые 5 символов, добавьте троеточие в конец и выведите на экран. Если же в этой строке 5 и менее символов - просто выведите эту строку на экран.
	$str = "abcdefg";
	if(strlen($str) > 5){
		echo substr($str, 0, 5)."...";
	} else {
		echo $str;
	}*/

	/*Тема: Работа с str_replace

	16. Дана строка '31.12.2013'. Замените все точки на дефисы. 
	$str = '31.12.2013';
	echo str_replace(".", '-', $str);

	17. Дана строка $str. Замените в ней все буквы 'a' на цифру 1, буквы 'b' - на 2, а буквы 'c' - на 3.
	$str = "abcdefabcdef";
	echo str_replace('abc','123',$str);

	18. Дана строка с буквами и цифрами, например, '1a2b3c4b5d6e7f8g9h0'. Удалите из нее все цифры. То есть в нашем случае должна получится строка 'abcbdefgh'.
	$str = '1a2b3c4b5d6e7f8g9h0';
	echo str_replace(['1','2','3','4','5','6','7','8','9','0'], '', $str);*/

	/*Тема: Работа с strtr

	19. Дана строка $str. Замените в ней все буквы 'a' на цифру 1, буквы 'b' - на 2, а буквы 'c' - на 3. Решите задачу двумя способами работы с функцией strtr (массив замен и две строки замен).
	$str = 'abcdef';
	echo strtr($str, ['a'=>'1', 'b'=>'2', 'c'=>'3']);

	$str = 'abcabc';
	echo strtr($str, 'abc', '123');*/
	

	/*Тема: Работа с substr_replace

	20. Дана строка $str. Вырежите из нее подстроку с 3-го символа (отсчет с нуля), 5 штук и вместо нее вставьте '!!!'.
	$str = 'helloWorld';
	echo substr_replace($str, '!!!', 3, 5);

	Тема: Работа с strpos, strrpos

	21. Дана строка 'abc abc abc'. Определите позицию первой буквы 'b'.
	$str = 'abc abc abc';
	echo strpos($str, "b");

	22. Дана строка 'abc abc abc'. Определите позицию последней буквы 'b'.
	$str = 'abc abc abc';
	echo strrpos($str, "b");

	23. Дана строка 'abc abc abc'. Определите позицию первой найденной буквы 'b', если начать поиск не с начала строки, а с позиции 3. 
	$str = 'abc abc abc';
	echo strpos($str, "b", 3);

	24. Дана строка 'aaa aaa aaa aaa aaa'. Определите позицию второго пробела.
	$str = 'aaa aaa aaa aaa aaa';
	echo strpos($str, " ", 5);

	25.  Проверьте, что в строке есть две точки подряд. Если это так - выведите 'есть', если не так - 'нет'.
	$str = "he..llo";
	if(strpos($str, '..') != 0){
		echo "Есть";
	} else {
		echo "Нет";
	}

	26. Проверьте, что строка начинается на 'http://'. Если это так - выведите 'да', если не так - 'нет'.
	$str = 'http://ya.ru';
	if(strpos($str, 'http://') === 0){
		echo "да";
	} else {
		echo "нет";
	}*/

	/*Тема: Работа с explode, implode

	27. Дана строка 'html css php'. С помощью функции explode запишите каждое слово этой строки в отдельный элемент массива.
	$str = 'html css php';
	$arr = explode(",", $str);
	echo $arr[0]." ".$arr[1]." ".$arr[2];

	28. Дан массив с элементами 'html', 'css', 'php'. С помощью функции implode создайте строку из этих элементов, разделенных запятыми. 
	$arr = ["html", "css", "php"];
	echo implode(", ", $arr);

	29. В переменной $date лежит дата в формате '2013-12-31'. Преобразуйте эту дату в формат '31.12.2013'.
	$date = '2013-12-31';
	$arr = explode("-", $date);
	echo $arr[2].".".$arr[1].".".$arr[0];*/

	/*Тема: Работа с str_split

	30. Дана строка '1234567890'. Разбейте ее на массив с элементами '12', '34', '56', '78', '90'.
	$str = '1234567890';
	$arr = str_split($str, '2');
	var_dump($arr);

	31. Дана строка '1234567890'. Разбейте ее на массив с элементами '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'.
	$str = '1234567890';
	$arr = str_split($str, '1');
	var_dump($arr);

	32.  Дана строка '1234567890'. Сделайте из нее строку '12-34-56-78-90' не используя цикл. 
	$str = '1234567890';
	$arr = str_split($str, '2');
	echo implode('-', $arr);*/

	/*Тема: Работа с trim, ltrim, rtrim
	33.  Дана строка. Очистите ее от концевых пробелов.
	$str = ' hello ';
	echo trim($str);

	34. Дана строка '/php/'. Сделайте из нее строку 'php', удалив концевые слеши.
	$str = '/php/';
	echo trim($str, '/');

	35. Дана строка 'слова слова слова.'. В конце этой строки может быть точка, а может и не быть. Сделайте так, чтобы в конце этой строки гарантировано стояла точка. То есть: если этой точки нет - ее надо добавить, а если есть - ничего не делать. Задачу решите через rtrim без всяких ифов.
	$str = 'слова слова слова.';
	echo rtrim($str, ".").".";*/

	/*Тема: Работа с strrev

	36. Дана строка '12345'. Сделайте из нее строку '54321'. 
	$str = '12345';
	echo strrev($str);

	37. Проверьте, является ли слово палиндромом (одинаково читается во всех направлениях, примеры таких слов: madam, otto, kayak, nun, level).
	$str = 'sixaxis';
	if(strrev($str) == $str){
		echo "Да";
	} else {
		echo "Нет";
	}*/

	/*Тема: Работа с str_shuffle

	38. Дана строка. Перемешайте символы этой строки в случайном порядке.
	$str = 'hello world';
	echo str_shuffle($str);

	39. Создайте строку из 6-ти случайных маленьких латинских букв так, чтобы буквы не повторялись. Нужно сделать так, чтобы в нашей строке могла быть любая латинская буква, а не ограниченный набор. 
	$str = 'qwerty';
	echo str_shuffle($str);*/

	/*Тема: Работа с number_format

	40. Дана строка '12345678'. Сделайте из нее строку '12 345 678'.
	$str = '12345678';
	echo number_format($str, 0, '.', ' ');*/

	/*Тема: Работа с str_repeat

	41. Нарисуйте пирамиду, как показано на рисунке, только у вашей пирамиды должно быть 9 рядов, а не 5. Решите задачу с помощью одного цикла и функции str_repeat.
	$str = 'x';
	for($i = 1; $i <= 9; $i++){
		echo str_repeat($str, $i)."<br>";
	}

	42. Нарисуйте пирамиду, как показано на рисунке. Решите задачу с помощью одного цикла и функции str_repeat.
	$str = 1;
	for($i = 1; $i <= 9; $i++){
		echo str_repeat($str, $i)."<br>";
		$str++;
	}
	
	43. Дана строка 'html, <b>php</b>, js'. Удалите теги из этой строки
	$str = 'html, <b>php<b>, js';
	echo strip_tags($str);

	44. Дана строка $str. Удалите все теги из этой строки, кроме тегов <b> и <i>.
	$str = 'html, <b>php<b>, <i>js<i>';
	echo strip_tags($str, "<b><i>");

	45.  Дана строка 'html, <b>php</b>, js'. Выведите ее на экран 'как есть': то есть браузер не должен преобразовать <b> в жирный.
	$str = 'html, <b>php<b>, js';
	echo htmlspecialchars($str);*/

	/*Тема: Работа c chr и ord

	46. Узнайте код символов 'a', 'b', 'c', пробела.
	echo ord('a')."<br>";
	echo ord('b')."<br>";
	echo ord('c')."<br>";
	echo ord(' ');

	47. Изучите таблицу ASCII. Определите границы, в которых располагаются буквы английского алфавита. ++ 

	48. Выведите на экран символ с кодом 33.
	echo chr("33");

	49. Запишите в переменную $str случайный символ - большую букву латинского алфавита. Подсказка: с помощью таблицы ASCII определите какие целые числа соответствуют большим буквам латинского алфавита.
	$str = chr(mt_rand(65, 90));
	echo $str;
		
	50. Запишите в переменную $str случайную строку $len длиной, состоящую из маленьких букв латинского алфавита. Подсказка: воспользуйтесь циклом for или while. 
	$str = '';
	$len = 10;
	for($i = 0; $i < $len; $i++){
		$str .= chr(mt_rand(97, 122));
	}
	echo $str;

	51. Дана буква английского алфавита. Узнайте, она маленькая или большая.
	$str = 'F';
	if(ord($str) >= 65 and ord($str) <= 90){
		echo "Буква большая!";
	} else {
		echo "Буква маленькая!";
	}*/

	/*Тема: Работа с strchr, strrchr

	52. Дана строка 'ab-cd-ef'. С помощью функции strchr выведите на экран строку '-cd-ef'
	echo strchr("ab-cd-ef", '-');

	53. Дана строка 'ab-cd-ef'. С помощью функции strrchr выведите на экран строку '-ef'.
	echo strrchr("ab-cd-ef", '-');*/

	/*Тема: Работа с strstr

	54. Дана строка 'ab--cd--ef'. С помощью функции strstr выведите на экран строку '--cd--ef'.
	$str = "ab--cd--ef";
	echo strstr($str, '--');*/

	/*Тема: Задачи

	55. Преобразуйте строку 'var_test_text' в 'varTestText'. Скрипт, конечно же, должен работать с любыми аналогичными строками.
	$str = '';
	$arr = explode("_", "var_test_text");
	foreach ($arr as $key => $value) {
		if($key != 0){
			$str .= ucfirst($value);
		} else {
			$str .= $value;
		}
	}
	echo $str;

	56. Дана строка следующего вида: 5 цифр, затем пробел, затем еще 5 цифр. Например, дана такая строка '12345 67890'. Сделайте из нее строку '54321 09876'.
	$str = "";
	$arr = explode(" ", "12345 67890");
	foreach ($arr as $key => $value) {
		$str .= strrev($value)." ";
	}
	echo $str;

	57. Дан массив с числами. Выведите на экран все числа, в которых есть цифра 3. 
	$arr = [43, 421, 452, 223, 906, 345, 544];
	$str = '';
	foreach ($arr as $key => $value) {
		if(strpos($value, "3") !== false){
			$str .= $value." ";
		} 
	}
	echo $str;

	58. Дан массив с числами. Посчитайте суммарное количество цифр 3 в этих числах.
	$arr = [189,222,377,432,511,689,755,835,3933];
	$result = 0;
	$arr2 = [];
	foreach ($arr as $key => $value) {
		$arr2 = str_split($value, 1);
			foreach ($arr2 as $key => $elem) {
				if($elem == "3"){
				$result += 3;
			}
		}
	}
	echo $result;*/
?>