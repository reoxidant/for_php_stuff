<?php 


// Примеры
// Дана строка 'aaa:444 kkk:333'. Напишите регулярку, которая найдет строки по шаблону: любое количество букв, символ ":", любое цифр и поменяет местами то, что стоит до ":" на то, что стоит после него. Например, aaa:444 должно превратиться в 444:aaa.

// echo preg_replace('#([a-z]+):([0-9]+)#i', '$2:$1', 'aaa:444 kkk:333');

// Дана строка '332 441 550'. Найдите все места, где есть два одинаковых идущих подряд цифры и замените их на '!'.

// echo preg_replace('#(\d)\1#i', '!', '1142333523');//
//Примеры
// Тема: Задачи на регулярные выражения PHP. Часть 3
// Тема: Задачи на карманы при замените

// 1. Дана строка 'aaa@bbb eee7@kkk'. Напишите регулярку, которая найдет строки по шаблону: любое количество букв и цифр, символ @, любое количество букв и цифр и поменяет местами то, что стоит до @ на то, что стоит после нее. Например, aaa@bbb должно превратиться в bbb@aaa.

// echo preg_replace('#([a-z0-9]+)@([a-z0-9]+)#', '$2@$1', 'aaa@bbb eee7@kkk');

// 2. Дана строка вида 'a1b2c3'. Напишите регулярку, которая найдет все цифры и удвоит их количество таким образом: 'a11b22c33' (то есть рядом с каждой цифрой напишет такую же).

// echo preg_replace('#([0-9])+#', '$1$1', 'a1b2c3');

// Тема: Задачи в самой регулярке

// 3. Дана строка 'aae xxz 33a'. Найдите все места, где есть два одинаковых идущих подряд символа и замените их на '!'.

// echo preg_replace('#([a-z0-9])\1#', '!', 'aae xxz 33a');

// 4. Дана строка 'aaa bcd xxx efg'. Найдите строки, состоящие из одинаковых символов (это будет aaa xxx).

// echo preg_replace('#([a-z]+)\1+#', '!', 'aaa bcd xxx efg');

// Тема: Задачи на preg_match[_all]

// 5. С помощью preg_match определите, что переданная строка является емэйлом. Примеры емэйлов для тестирования mymail@mail.ru, my.mail@mail.ru, my-mail@mail.ru, my_mail@mail.ru, mail@mail.com, mail@mail.by, mail@yandex.ru.

// echo preg_match('#^[a-z._-]+@[a-z]+\.[a-z]{2,3}$#', 'mail@yandex.ru');

// 6. Дана строка с текстом, в котором могут быть емейлы. С помощью preg_match_all найдите все емэйлы.

// echo preg_match_all('#[a-z0-9._-]+@[a-z]+\.[a-z]{2,3}#', 'my email address is mrrame@gmail.com and his email is mrgar@yahoo.com', $m);

// var_dump($m);

// 7. С помощью preg_match определите, что переданная строка является доменом. Примеры доменов: site.ru, site.com, my-site123.com.

// preg_match('#^[a-z0-9._-]+\.[a-z]{2,3}$#', 'site.ru', $m);

// var_dump($m);

// 8. С помощью preg_match определите, что переданная строка является доменом 3-го уровня. Примеры доменов: hello.site.ru, hello.site.com, hello.my-site.com. 

// preg_match('#^[a-z0-9._-]+\.[a-z0-9._]+\.[a-z]{2,3}$#','hello.site.ru', $m);

// var_dump($m);

// 9. С помощью preg_match определите, что переданная строка является доменом, название которого начинается с http. Примеры доменов: http://site.ru, http://site.com.

// preg_match('#^http://[a-z0-9_.-]+\.[a-z]{2,3}$#', 'http://site.com', $m);

// var_dump($m);

// 10. С помощью preg_match определите, что переданная строка является доменом вида http://site.ru. Протокол может быть как http, так и https. 

// preg_match('#https?://[a-z0-9_.-]+\.[a-z]{2,3}#', 'http://site.ru', $m);

// var_dump($m);

// 11. С помощью preg_match определите, что переданная строка является доменом. Протокол может быть как http, так и https. Домен может быть со слешем в конце: http://site.ru, http://site.ru/, https://site.ru, https://site.ru/.

// preg_match('#https?://[a-z0-9_.-]+\.[a-z]{2,3}/?#', 'https://site.ru/', $m);

// var_dump($m);

// 12. С помощью preg_match определите, что переданная строка начинается с http или с https.

// preg_match('#^https?#', 'https://site.ru', $m);

// var_dump($m);

// 13. С помощью preg_match определите, что переданная строка заканчивается расширением txt, html или php

// preg_match('#\.(txt|html|php)$#', 'regular.php', $m);

// var_dump($m);

// 14. С помощью preg_match определите, что переданная строка заканчивается расширением jpg или jpeg.

// preg_match('#\.(jpg|jpeg)#', 'photo.jpeg', $m);

// var_dump($m);

// 15. С помощью preg_match узнайте является ли строка числом, длиной до 12 цифр.

// preg_match('#^[0-9]{1,12}$#', '221994', $m);

// var_dump($m);

// 16. Дана строка с буквами, пробелами и цифрами. Найдите сумму всех чисел из данной строки.

// preg_match_all('#\d#', 's1d f2144asd c432', $m);

// for ($i=0; $i < count($m[0]); $i++) { 
// 	$result += $m[0][$i];
// }

// echo $result;

// Тема: Задачи на preg_replace

// 17. С помощью preg_replace преобразуйте дату в формате '31-12-2014' в '2014.12.31'. 

// echo preg_replace('#(\d{2})\-(\d{2})\-(\d{4})#', '$3.$2.$1', '31-12-2014');

// 18. С помощью preg_replace замените в строке домены вида http://site.ru, http://site.com на <a href="http://site.ru">site.ru</a>. 

// echo preg_replace('#https?://([a-z0-9._-]+\.[a-z]{2,3})#', '<a href="$0">$1</a>', 'http://site.ru');
?>