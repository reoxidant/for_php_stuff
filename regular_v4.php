<!-- Примеры решения задач -->
<!-- Задача. С помощью позитивного и негативного просмотра найдите все строки по шаблону буква z, затем 2 буквы y и поменяйте 2 буквы y на знак '!'. То есть из 'zyy' нужно сделать 'z!'. -->
<!-- <?php 

echo preg_replace('#(?<=z)y+#', '!', 'zyy hyy');

?> -->

<!-- Задача. Дана строка с целыми числами 'a1b2c3'. С помощью регулярки преобразуйте строку так, чтобы вместо этих чисел стояли их кубы. -->

<!-- <?php 

	echo preg_replace_callback('#(\d+)#', 'cube', 'a1b2c3');
 	function cube($match)
	{
		return $result = pow($match[0], 3);
	}

?> -->

<?php 
// Тема: Задачи на регулярные выражения PHP. Часть 4

// Тема: Задачи на позитивный и негативный просмотра

// 1. С помощью позитивного и негативного просмотра найдите все строки по шаблону буква b, затем 3 буквы a и поменяйте 3 буквы a на знак '!'. То есть из 'baaa' нужно сделать 'b!'.

// echo preg_replace('#(?!b)a+#', '!', 'baaa');

// 2.  С помощью позитивного и негативного просмотра найдите все строки по шаблону любая буква, но не b, затем 3 буквы a и поменяйте 3 буквы a на знак '!'. То есть из, к примеру, 'waaa' нужно сделать 'w!', а 'baaa' не поменяется. 

// echo preg_replace('#(?<=w)a+#', '!', 'waaa baaa');

// 3. С помощью позитивного и негативного просмотра найдите все строки по шаблону 3 буквы a, затем буква b и поменяйте 3 буквы a на знак '!'. То есть из 'aaab' нужно сделать '!b'.

// echo preg_replace('#(?!b)a+#', '!', 'aaab');

// 4. С помощью позитивного и негативного просмотра найдите все строки по шаблону 3 буквы a, затем любая буква, но не b и поменяйте 3 буквы a на знак '!'. То есть из, к примеру, 'aaaw' нужно сделать '!w', а 'aaab' не поменяется. 

// echo preg_replace('#a+(?=w)#', '!', 'aaaw aaab');

// 5. Дана строка со звездочками 'aaa * bbb ** eee * **'. Замените на '!' только одиночные звездочки, но не двойные.

// echo preg_replace('#(?<!\*)\*(?!\*)#', '!', 'aaa * bbb ** eee * **');

// 6. Дана строка со звездочками 'aaa * bbb ** eee *** kkk ****'. Замените на '!' только двойные звездочки, но не одиночные или тройные и более. 

// echo preg_replace('#(?<!\*)\*\*(?!\*)#', '!', 'aaa * bbb ** eee *** kkk ****');

// 7. С помощью позитивного и негативного просмотра найдите две одинаковые идущие подряд буквы и первую поменяйте на '!'.

// echo preg_replace('#([a-z])(?=\1)#', '!', 'ffggeebbaff');

// 8. С помощью позитивного и негативного просмотра найдите две одинаковые идущие подряд буквы и вторую поменяйте на '!'. 

// echo preg_replace('#(?<=([a-z]))\1#', '!', 'ffggeebbaff');

// Тема: Задачи на preg_replace_callback

// 9. Дана строка с целыми числами. С помощью регулярки преобразуйте строку так, чтобы вместо этих чисел стояли их квадраты.

// echo preg_replace_callback('#\d#', 'square', '1255234234');

// function square($match)
// {
// 	$result = pow($match[0], 2);
// 	return $result;
// }

// 10.  Дана строка с целыми числами. Найдите числа, стоящие в кавычках и увеличьте их в два раза. Пример: из строки 2aaa'3'bbb'4' сделаем строку 2aaa'6'bbb'8'.

// echo preg_replace_callback('#\d(?!([a-z]))#', 'value', "2aaa'3'bbb'4'");

// function value($match)
// {
// 	$result = $match[0] * 2;
// 	return $result;
// }

?>