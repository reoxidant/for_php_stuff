<?php 
	//example
	// Задача: реализуйте функцию inArray, которая будет проверять, есть ли в массиве элемент с таким значением или нет. Первым параметром функция должна принимать значение, а вторым - массив. Если такой элемент есть - функция должна вернуть true, а если нет - false.

	/*function inArray($value, $arr)
	{
		for($i = 0; $i<count($arr); $i++){
			if($arr[$i] == $value){
				return true;
			}
		}
		return false;
	}

	$arr = [1,2, 3, 4, 5];
	echo inArray(3, $arr);*/

	// Задача: реализуйте функцию isSimple, которая параметром будет принимать число и проверять, простое оно или нет. Простое число - это число, которое не делится ни на одно другое число (кроме как на 1 и на само себя - на это делятся все числа). Если число простое - функция должна вернуть true, в противном случае false.

	/*function isSimple($num)
	{
		for($i = 2; $i < $num; $i++){
			if($num%$i==0){
				return false;
			}

		}
		return true;
	}

	var_dump(isSimple(8));*/

	// Задача: реализуйте функцию getDivisors, которая параметром будет принимать число и возвращать массив его делителей, то есть чисел, на которое делится наше число. К примеру, если мы передадим число 24 - мы должны получить массив [1, 2, 3, 4, 6, 12, 24].

	/*	function getDivisors($num)
	{
		$arr = [];
		for($i = 1; $i <= $num; $i++){
			if($num%$i==0){
				$arr[] = $i;
			}
		}
		return $arr;
	}

	var_dump(getDivisors(24));*/
	//example

	//1. Сделайте функцию, которая принимает строку на русском языке, а возвращает ее транслит.
	/*function translit($str_ru)
	{
		$ru = ["а","б","в","г","д","е","ё","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ы","ь","э","ю","я","А","Б","В","Г","Д","Е","Ё","Ж","З","И","Й","К","Л","М","Н","О","П","Р","С","Т","У","Ф","Ч","Ц","Ч","Ш","Щ","Ы","Ь","Э","Ю","Я"];
		$enTranslit = ["a","b","v","g","d","e","io","zh","z","i","i","k","l","m","n","o","p","r","s","t","u","f","h","c","ch","sh","sh","y","`","e","iu","ia","A","B","V","G","D","E","IO","ZH","Z","I","I","K","L","M","N","O","P","R","S","T","U","F","H","C","CH","SH","SH","Y","`","E","IU","IA"];

		return str_replace($ru, $enTranslit, $str_ru);
		
	}

	echo translit("Привер мир!");*/

	// 2. Сделайте функцию, которая возвращает множественное или единственное число существительного. Пример: 1 яблоко, 2 (3, 4) яблока, 5 яблок. Функция первым параметром принимает число, а следующие 3 параметра — форма для единственного числа, для чисел два, три, четыре и для чисел, больших четырех, например, func(3, 'яблоко', 'яблока', 'яблок').

	/*function func($num, $one, $any, $many)
	{
		switch($num){
			case ($num == 1):
			return $num." ".$one;
			break;
			case ($num > 1 and $num < 5):
			return $num." ".$any;
			break;
			case ($num >= 5):
			return $num." ".$many;
			break;
			default:
			return "Error...";
		}
	}

	echo func(3, 'яблоко', "яблока", "яблок");*/

	// 3. Найдите все счастливые билеты. Счастливый билет - это билет, в котором сумма первых трех цифр его номера равна сумме вторых трех цифр его номера.

	/*function func($num)
	{
		if(strlen($num) >= 6){
			$arr = array_chunk(str_split($num), 3);
			if(array_sum($arr[0]) == array_sum($arr[1])){
				return 'Число счастливое.';
			} else {
				return 'Число несчастливое.';
			}
		} else {
			return "Число недействительно.";
		}
	}
	echo func(123402);*/

	/*4.  Дружественные числа - два различных числа, для которых сумма всех собственных делителей первого числа равна второму числу и наоборот, сумма всех собственных делителей второго числа равна первому числу.

	Например, 220 и 284. Делители для 220 это 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 и 110, сумма делителей равна 284. Делители для 284 это 1, 2, 4, 71 и 142, их сумма равна 220.

	Задача: найдите все пары дружественных чисел в промежутке от 1 до 10000. Для этого сделайте вспомогательную функцию, которая находит все делители числа и возвращает их в виде массива. Также сделайте функцию, которая параметром принимает массив, а возвращает его сумму.*/
	/*for($i = 2; $i <= 1000; $i++){
		for ($j = 2; $j <= 1000; $j++) { 
			numComparison($i,$j);
		}
	}

	function divNumbers($num){
		for($i = 1; $i < $num; $i++){
			if($num%$i == 0){
				$arr[] = $i;
			}
		}
		return $arr;
	}

	function sumDiv($arr){
		return array_sum($arr);
	}

	function numComparison($num1, $num2){
		if(sumDiv(divNumbers($num1)) == $num2 and sumDiv(divNumbers($num2)) == $num1){
			echo $num1." and ".$num2."<br>";
		} 
	}*/
	
 ?>

